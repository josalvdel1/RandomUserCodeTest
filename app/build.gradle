apply plugin: 'com.android.application'
apply plugin: 'me.tatarka.retrolambda'
apply plugin: 'com.neenbedankt.android-apt'

android {
    compileSdkVersion 25
    buildToolsVersion "25.0.2"
    defaultConfig {
        applicationId "com.josalvdel1.randomusercodetest"
        minSdkVersion 16
        targetSdkVersion 25
        versionCode 1
        versionName "1.0"
        vectorDrawables.useSupportLibrary = true
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

            buildConfigField "String", "API_URL", '"http://api.randomuser.me"'
        }

        debug {
            minifyEnabled false
            applicationIdSuffix '.debug'
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

            buildConfigField "String", "API_URL", '"http://api.randomuser.me"'
        }

        compileOptions {
            sourceCompatibility JavaVersion.VERSION_1_8
            targetCompatibility JavaVersion.VERSION_1_8
        }

        dexOptions {
            // Sets the maximum number of DEX processes
            // that can be started concurrently.
            maxProcessCount 8
            // Sets the maximum memory allocation pool size
            // for the dex operation.
            javaMaxHeapSize "2g"
            // Enables Gradle to pre-dex library dependencies.
            preDexLibraries true
        }

        packagingOptions {
            exclude 'META-INF/services/javax.annotation.processing.Processor'
        }

        lintOptions {
            disable 'InvalidPackage'
            abortOnError true
            ignoreWarnings false
        }
    }
}

ext {
    supportVersion = '25.3.1'
    leakCanaryVersion = '1.5.1'
    daggerVersion = '2.8'
    butterKnifeVersion = '8.4.0'
    retrofitVersion = '2.1.0'
    picassoVersion = '2.5.2'
    okhttpVersion = '3.6.0'
    archVersion = '1.0.0-alpha1'
    gsonVersion = '2.7'
    junitVersion = '4.11'
    robolectricVersion = '3.3'
    assertjVersion = '1.1.1'
    mockitoVersion = '2.7.14'
    mockito_kotlinVersion = '1.5.0'
    espressoVersion = '2.2.2'
    mockwebserverVersion = '3.6.0'
    runnerVersion = '0.5'
    commonsVersion = '2.4'
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])

    compile "com.android.support:cardview-v7:$supportVersion"
    compile "com.android.support:recyclerview-v7:$supportVersion"
    compile "com.android.support:appcompat-v7:$supportVersion"
    compile "com.android.support:support-v4:$supportVersion"
    compile "com.android.support:design:$supportVersion"
    compile "com.android.support:percent:$supportVersion"

    compile "android.arch.persistence.room:runtime:$archVersion"
    compile "android.arch.lifecycle:runtime:$archVersion"
    compile "android.arch.lifecycle:extensions:$archVersion"
    apt "android.arch.persistence.room:compiler:$archVersion"
    apt "android.arch.lifecycle:compiler:$archVersion"

    debugCompile "com.squareup.leakcanary:leakcanary-android:$leakCanaryVersion"
    releaseCompile "com.squareup.leakcanary:leakcanary-android-no-op:$leakCanaryVersion"
    testCompile "com.squareup.leakcanary:leakcanary-android-no-op:$leakCanaryVersion"

    compile "com.google.code.gson:gson:$gsonVersion"
    compile "com.google.dagger:dagger:$daggerVersion"
    apt "com.google.dagger:dagger-compiler:$daggerVersion"
    compile "com.jakewharton:butterknife:$butterKnifeVersion"
    apt "com.jakewharton:butterknife-compiler:$butterKnifeVersion"

    compile "com.squareup.retrofit2:retrofit:$retrofitVersion"
    compile "com.squareup.retrofit2:converter-gson:$retrofitVersion"
    compile "com.squareup.okhttp3:okhttp:$okhttpVersion"
    compile "com.squareup.okhttp3:logging-interceptor:$okhttpVersion"
    compile "com.squareup.picasso:picasso:$picassoVersion"


    testCompile "junit:junit:$junitVersion"
    testCompile("com.squareup.assertj:assertj-android:$assertjVersion")
    testCompile "org.mockito:mockito-core:$mockitoVersion"

    testCompile "com.squareup.okhttp3:mockwebserver:$mockwebserverVersion"
    testCompile "commons-io:commons-io:$commonsVersion"

    androidTestCompile("com.android.support.test:runner:$runnerVersion")
    androidTestCompile("com.android.support.test.espresso:espresso-core:$espressoVersion")
    androidTestCompile("com.android.support.test.espresso:espresso-intents:$espressoVersion")
    androidTestCompile("com.android.support.test.espresso:espresso-contrib:$espressoVersion")
}

configurations.all {
    resolutionStrategy {
        force "com.android.support:support-annotations:$supportVersion"
        force "com.android.support:design:$supportVersion"
        force "com.android.support:support-v4:$supportVersion"
        force "com.android.support:appcompat-v7:$supportVersion"
        force "com.android.support:recyclerview-v7:$supportVersion"
    }
}